<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ax.shop.mapper.UserinfoMapper">
    <resultMap id="BaseResultMap" type="com.ax.shop.entity.Userinfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="passWord" property="passWord" jdbcType="VARCHAR"/>
        <result column="userType" property="userType" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, userName, passWord, userType
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_userinfo
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_userinfo
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ax.shop.entity.Userinfo" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_userinfo (userName, passWord, userType
        )
        values (#{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ax.shop.entity.Userinfo" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_userinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                userName,
            </if>
            <if test="passWord != null">
                passWord,
            </if>
            <if test="userType != null">
                userType,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null">
                #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ax.shop.entity.Userinfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_userinfo
        <set>
            <if test="userName != null">
                userName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="passWord != null">
                passWord = #{passWord,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                userType = #{userType,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ax.shop.entity.Userinfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_userinfo
        set userName = #{userName,jdbcType=VARCHAR},
        passWord = #{passWord,jdbcType=VARCHAR},
        userType = #{userType,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!--注册获得是否已经有了-->
    <select id="getCountByuserName" resultType="int">

        SELECT COUNT(id) FROM t_userinfo WHERE userName=#{userName}
    </select>

    <!--按照名userName查找-->
    <select id="getByuserName" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"/>
        FROM t_userinfo WHERE userName=#{userName}
    </select>

    <!--按照名userName和passwor查找-->
    <select id="getModelByuserNameAndpassWord" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"/>
        FROM t_userinfo WHERE userName=#{userName} AND passWord=#{passWord}
    </select>


    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_userinfo
    </select>

</mapper>