<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ax.shop.mapper.UserinfoMapper">
    <resultMap id="BaseResultMap" type="com.ax.shop.entity.Userinfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="userType" property="userType" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, username, password, userType
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from t_userinfo
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from t_userinfo
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ax.shop.entity.Userinfo" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_userinfo (username, password, userType
        )
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ax.shop.entity.Userinfo" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into t_userinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="userType != null">
                userType,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ax.shop.entity.Userinfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_userinfo
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                userType = #{userType,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ax.shop.entity.Userinfo">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update t_userinfo
        set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        userType = #{userType,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>


    <!--注册获得是否已经有了-->
    <select id="getCountByusername" resultType="int">

        SELECT COUNT(id) FROM t_userinfo WHERE username=#{username}
    </select>

    <!--按照名username查找-->
    <select id="getByusername" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"/>
        FROM t_userinfo WHERE username=#{username}
    </select>

    <!--按照名username和passwor查找-->
    <select id="getModelByusernameAndpassword" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"/>
        FROM t_userinfo WHERE username=#{username} AND password=#{password}
    </select>


    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_userinfo
    </select>


    <resultMap id="userAndReloResultMap" type="com.ax.shop.entity.Userinfo">

        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="userType" property="userType" jdbcType="INTEGER"/>

        <collection property="authorities" ofType="com.ax.shop.entity.UserRole">
            <id column="rid" property="id"/>
            <result column="role" property="role"/>
        </collection>

    </resultMap>

    <select id="selectUserWithRelo" resultMap="userAndReloResultMap">
       SELECT u.*, r.id as rid ,r.role FROM t_userinfo u LEFT JOIN t_user_role r ON u.id=r.userid AND  u.id=#{id}
    </select>


</mapper>